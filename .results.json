{
  "stats": {
    "suites": 4,
    "tests": 6,
    "passes": 5,
    "pending": 0,
    "failures": 1,
    "start": "2022-11-25T09:09:26.797Z",
    "end": "2022-11-25T09:09:27.220Z",
    "duration": 423
  },
  "tests": [
    {
      "title": "is set as Scuber",
      "fullTitle": "index.js companyName is set as Scuber",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is defined as a const",
      "fullTitle": "index.js companyName is defined as a const",
      "duration": 2,
      "currentRetry": 0,
      "err": {
        "message": "Expected companyName to be a const: expected '// Code your solution \\n\\nlet companyName=\\'Scuber\\';\\n\\n\\nconst CompanyName=\\'Scuber\\';\\n\\n\\nlet mostProfitableNeighborhood=\\'Chelsea\\';\\n\\n\\nlet companyCeo=\\'Susan Smith\\';\\n' to match /const companyName/",
        "showDiff": false,
        "actual": "// Code your solution \n\nlet companyName='Scuber';\n\n\nconst CompanyName='Scuber';\n\n\nlet mostProfitableNeighborhood='Chelsea';\n\n\nlet companyCeo='Susan Smith';\n",
        "stack": "AssertionError: Expected companyName to be a const: expected '// Code your solution \\n\\nlet companyName=\\'Scuber\\';\\n\\n\\nconst CompanyName=\\'Scuber\\';\\n\\n\\nlet mostProfitableNeighborhood=\\'Chelsea\\';\\n\\n\\nlet companyCeo=\\'Susan Smith\\';\\n' to match /const companyName/\n    at Context.<anonymous> (test/indexTest.js:13:21)\n    at processImmediate (node:internal/timers:466:21)"
      }
    },
    {
      "title": "is declared as equal to Chelsea",
      "fullTitle": "index.js mostProfitableNeighborhood is declared as equal to Chelsea",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is defined using let",
      "fullTitle": "index.js mostProfitableNeighborhood is defined using let",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is declared as equal to Susan Smith",
      "fullTitle": "index.js companyCeo is declared as equal to Susan Smith",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is defined using let",
      "fullTitle": "index.js companyCeo is defined using let",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    }
  ],
  "pending": [],
  "failures": [
    {
      "title": "is defined as a const",
      "fullTitle": "index.js companyName is defined as a const",
      "duration": 2,
      "currentRetry": 0,
      "err": {
        "message": "Expected companyName to be a const: expected '// Code your solution \\n\\nlet companyName=\\'Scuber\\';\\n\\n\\nconst CompanyName=\\'Scuber\\';\\n\\n\\nlet mostProfitableNeighborhood=\\'Chelsea\\';\\n\\n\\nlet companyCeo=\\'Susan Smith\\';\\n' to match /const companyName/",
        "showDiff": false,
        "actual": "// Code your solution \n\nlet companyName='Scuber';\n\n\nconst CompanyName='Scuber';\n\n\nlet mostProfitableNeighborhood='Chelsea';\n\n\nlet companyCeo='Susan Smith';\n",
        "stack": "AssertionError: Expected companyName to be a const: expected '// Code your solution \\n\\nlet companyName=\\'Scuber\\';\\n\\n\\nconst CompanyName=\\'Scuber\\';\\n\\n\\nlet mostProfitableNeighborhood=\\'Chelsea\\';\\n\\n\\nlet companyCeo=\\'Susan Smith\\';\\n' to match /const companyName/\n    at Context.<anonymous> (test/indexTest.js:13:21)\n    at processImmediate (node:internal/timers:466:21)"
      }
    }
  ],
  "passes": [
    {
      "title": "is set as Scuber",
      "fullTitle": "index.js companyName is set as Scuber",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is declared as equal to Chelsea",
      "fullTitle": "index.js mostProfitableNeighborhood is declared as equal to Chelsea",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is defined using let",
      "fullTitle": "index.js mostProfitableNeighborhood is defined using let",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is declared as equal to Susan Smith",
      "fullTitle": "index.js companyCeo is declared as equal to Susan Smith",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is defined using let",
      "fullTitle": "index.js companyCeo is defined using let",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    }
  ]
}